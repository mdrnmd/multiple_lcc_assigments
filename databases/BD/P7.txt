
1)
(select first_name, last_name from staff) union (select first_name, last_name from customer) order by first_name, last_name;

2)
select title from film where length=(select max(length) from film) order by 1;

3)
select title from film where 
       film_id in (select distinct film_id from inventory natural join rental) 
       and film_id not in (select distinct film_id from( inventory natural join rental)  
       where customer_id in (select customer_id from customer where first_name='LEE' and last_name='HAWKS'));

//prof
select title from film where not exists ( select * from rental natural join inventory natural in customer where first_name='LEE' and last_name='HAWKS' and inventory.film_id = film.film_id) and exists ( select * from rental natural join inventory where inventory.film_id = film.film_id) order by title;


4)
select title from film where(  film_id not in ( select film_id from film_actor));

5)
select title from film natural join inventory where inventory_id not in(select inventory_id from inventory natural join rental);

//professor

select title from film natural join inventory where not exists( select * from rental natural join inventory where inventory.film_id = film.film_id) order by title;

6)

// select count(*) from category ; //todas as categorias 17 

select customer_id, count(distinct category_id) from rental NATURAl JOIN inventory NATURAL JOIN film NATURAL JOIN category group by customer_id; //(parte da questao)


 select first_name, last_name from(select customer_id, count(distinct category_id) from rental NATURAl JOIN inventory NATURAL JOIN film NATURAL JOIN category group by customer_id having count(distinct category_id)=(select count(distinct category_id) from category natural join film)) as T , customer where T.customer_id =customer.customer_id;

7)
select first_name, last_name from(select actor_id, count(category_id) from film_actor natural join film natural join category group by actor_id having count( distinct category_id)=(select count(distinct category_id) from category natural join film)
				)
       as A, actor where A.actor_id=actor.actor_id;

