package sonc.quad;

import java.util.HashSet;
import java.util.Set;

public class LeafTrie<T extends HasPoint> extends Trie<T> {

	Set<T> leaf;

	public LeafTrie(double bottomRightX, double bottomRightY, double topLeftX, double topLeftY) {
		super(bottomRightX, bottomRightY, topLeftX, topLeftY);
		leaf = new HashSet<T>();
	}

	T find(T point) {
		if(leaf.contains(point))
			return point;
		else return null;
	}

	Trie<T> insert(T point) {

	}

	Trie<T> insertReplace(T point) {

	}

	void delete(T point) {
		leaf.remove(point);
	}

	void collectNear(double x, double y, double radius, Set<T> nodes) {

	}

	void collectAll(Set<T> nodes) {
		points.addAll(leaf);
		

	}
	
	@Override
	public String toString() {
		
	}
}


