import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;


class DecisionTree {

	// Data about the matrix
	int numAttributes;
	String []attributeNames;
	List<List<String>> data;

	public DecisionTree(List<List<String>> data) {
		this.data = data;
		// calcular atributos;
	}
	/*
	 * Generate Tree
	 */
	public boolean generateTree() {
		return false;
	}
	/*
	 * Question the tree
	 */
	public String question(String line) {
		String answer = new String(); 
		return answer;
	}
	
	public void printTree() {
		
	}
}

class Node {
	double entropy;
}

public class ID3  {

	static public List<List<String>> readFile(String path) {
		// this gives you a 2-dimensional array of strings
		List<List<String>> lines = new ArrayList<>();

		File file= new File(path);
		Scanner inputStream;

		try {
			inputStream = new Scanner(file);
			while(inputStream.hasNext()) {
				String line= inputStream.next();
				String[] values = line.split(",");
				// this adds the currently parsed line to the 2-dimensional string array
				lines.add(Arrays.asList(values));
			}
			inputStream.close();
			return lines;
		}
		catch (FileNotFoundException e) {
			return null;
		}
	}

	static public void printMatrix(	List<List<String>> lines) {
		for(List<String> line: lines) {
			for (String value: line) {
				System.out.print( " " + value);
			}
			System.out.println();
		}
	}

	public static void main(String[] args) {
		List<List<String>> matrix = new ArrayList<>();
		matrix = readFile("./weather.csv");
		if(matrix == null) {
			System.out.println("Unable to read file");
			System.exit(0);
		}
		else {
			printMatrix(matrix);
			/* Falta separar os argumentos do contrutor */
			DecisionTree tree = new DecisionTree(matrix);
			if(tree.generateTree() == false) {
				System.out.println("\nFailed to generate tree");
				System.exit(0);
			}
			else {
				tree.print();
				// read questions;
			}
		}
	}
}